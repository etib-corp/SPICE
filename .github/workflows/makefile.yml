name: Makefile CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build
      run: make

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4

    - name: Test
      run: make tests_run

  versioning:
    runs-on: ubuntu-latest
    needs: ["build", "test"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get Current Version
        id: get_version
        run: |
          VERSION=$(cat VERSION) # Assuming you have a VERSION file
          echo "current_version=$VERSION" >> $GITHUB_ENV

      - name: Increment Version
        id: increment_version
        run: |
          VERSION=${{ env.current_version }}
          IFS='.' read -r -a parts <<< "$VERSION"
          ((parts[2]++)) # Increment patch version (X.Y.Z -> X.Y.Z+1)
          NEW_VERSION="${parts[0]}.${parts[1]}.${parts[2]}"
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Create and Push Tag
        run: |
          git tag -a v${{ env.new_version }} -m "Release v${{ env.new_version }}"
          git push origin v${{ env.new_version }}

  release:
    runs-on: ubuntu-latest
    needs: ["build", "test", "versioning"]
    steps:
    - name: Extract Tag or Branch Name
      id: extract_ref
      run: echo "ref_name=${GITHUB_REF##*/}" >> $GITHUB_ENV

    - name: Check prerelease
      id: check_version
      run: |
        if [[ "${{ github.ref }}" =~ ^refs/tags/[0-9.]+$ ]]; then
          echo "PRERELEASE=false" >> $GITHUB_OUTPUT
        else
          echo "PRERELEASE=true" >> $GITHUB_OUTPUT
        fi

    - name: Upload Release Asset
      uses: actions/upload-artifact@v3
      with:
        name: release-artifact
        path: .stack-work/dist/x86_64-linux-tinfo6/Cabal-3.10.3.0/build/spice-exe/spice-exe

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.ref_name }}2
        release_name: Release ${{ env.ref_name }}
        body: |
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false

    - name: Upload Release Asset to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .stack-work/dist/x86_64-linux-tinfo6/Cabal-3.10.3.0/build/spice-exe/spice-exe
        asset_name: artifact-name
        asset_content_type: application/octet-stream
